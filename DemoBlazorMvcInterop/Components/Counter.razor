@using Microsoft.AspNetCore.Components
@inject IJSRuntime JSRuntime
@inject NavigationManager navManager

<h1>Counter</h1>

<p>Current count: <span>@CurrentCount</span></p>

<span class="btn-block">
    <button class="btn btn-primary" @onclick="IncrementCount">+</button>
    <button class="btn btn-primary" @onclick="DecreaseCount">-</button>
</span>
<br/>
<div class="btn-block">
    <button class="btn btn-info" @onclick="ResetCount">Reset</button>
    <button class="btn btn-success" @onclick="() => GotoResultPage(CurrentCount)">Submit</button>
</div>

@code {
    [Parameter] public int CurrentCount { get; set; } = 0;

    [Parameter]
    public string ResultUrl { get; set; } = @"finalResult/total";

    private void IncrementCount()
    {
        CurrentCount++;
    }

    private void DecreaseCount()
    {
        CurrentCount--;
    }

    private async Task ResetCount()
    {
        var resetValue = await JSRuntime.InvokeAsync<string>("uiFunctions.showPrompt", "Reset counter");
        CurrentCount = int.Parse(resetValue);
    }

    private void GotoResultPage(int finalCount)
    {
        var gotoUri = $"{ResultUrl}?result={finalCount}";
        navManager.NavigateTo(gotoUri, true);
    }
}
